{"version":3,"file":"static/js/450.78cb60cd.chunk.js","mappings":"iNAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAG7B,OACE,+BACE,eACEC,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,MAAO,SACPC,IAAK,QALT,SAQGL,GACCA,EAAQM,KAAKC,KAAI,SAAAC,GACf,OACE,0BACGA,EAAMC,cACL,gBAAKC,IAjBF,kCAiBoBF,EAAMC,aAAcE,IAAI,MAE/C,gBAAKD,IAAKE,EAAcD,IAAI,GAAGP,MAAO,IAAKS,OAAQ,OAErD,uBAAIL,EAAMM,SANHN,EAAMO,a,+JCbd,SAASC,EAAiBC,GACvC,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAoCF,EAAAA,EAAAA,UAClC,mCADF,eAAOG,EAAP,UAwBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gGACP,gCACL,mCAENC,EAAO,IAAIC,gBAAgB,CAC/BC,QAHU,qCAONC,EATkB,UACP,gCADO,iBASQX,EATR,YASmBQ,EATnB,gDAWCI,MAAMD,GAXP,cAWlBE,EAXkB,gBAYRA,EAAWC,OAZH,cAYlBC,EAZkB,OAaxBC,QAAQC,IAAIF,GAbY,kBAcjBX,EAAeW,IAdE,4CAAH,qDAgBvBR,MACC,CAACP,KAGF,4BACE,gBAAKR,IAAKa,EAAaF,EAAYe,YAAazB,IAAI,MACpD,wBAAKU,EAAYgB,OAAShB,EAAYP,OACrCO,EAAYiB,SACX,4DAAWjB,EAAYiB,OAAO/B,KAAI,SAAAgC,GAAK,OAAIA,EAAMzB,KAAO,QAAxD,QAGF,uBAAIO,EAAYmB,YAChB,2FAAiBnB,EAAYoB,iBAC7B,mBACA,SAAC,KAAD,CAASC,GAAG,OAAZ,oBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,sBACA,mBAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC,UAAD,CAAM9C,QAASqB,EAAYrB,aACvD,SAAC,KAAD,CACE6C,KAAK,UACLC,SAAS,SAAC,UAAD,CAASC,QAAS1B,EAAY0B,kBAI7C,oC,8ECtDS,SAASC,EAAT,GAA+B,IAAZD,EAAW,EAAXA,QAIhC,OACE,+BACE,eACE9C,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,MAAO,SACPC,IAAK,QALT,SAQG0C,EAAQE,QAAQC,OAAS,EACxBH,EAAQE,QAAQ1C,KAAI,SAAA4C,GAClB,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOpC,QAOpB,sD","sources":["components/Cast/Cast.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\r\n\r\nexport default function Cast({ credits }) {\r\n  const actorPhoto = 'https://image.tmdb.org/t/p/w200';\r\n\r\n  return (\r\n    <>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          width: '1200px',\r\n          gap: '25px',\r\n        }}\r\n      >\r\n        {credits &&\r\n          credits.cast.map(actor => {\r\n            return (\r\n              <li key={actor.id}>\r\n                {actor.profile_path ? (\r\n                  <img src={actorPhoto + actor.profile_path} alt=\"\" />\r\n                ) : (\r\n                  <img src={DefaultPhoto} alt=\"\" width={200} height={300} />\r\n                )}\r\n                <p>{actor.name}</p>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useParams, NavLink, Route, Routes } from 'react-router-dom';\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport Cast from 'components/Cast/Cast';\r\nimport Reviews from 'components/Reviews/Reviews';\r\n\r\nexport default function MovieDetailsPage(props) {\r\n  const { movieId } = useParams();\r\n  const [detailsFilm, setDetailsFilm] = useState([]);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [imgBaseUrl, setImgBaseUrl] = useState(\r\n    'https://image.tmdb.org/t/p/w500'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchDetailsMovie = async () => {\r\n      const BASE_URL = 'https://api.themoviedb.org/3/';\r\n      const key = '39268a7cf0f5a62bddedb30e59a8c087';\r\n\r\n      const meta = new URLSearchParams({\r\n        api_key: key,\r\n      });\r\n      // console.log(movieId);\r\n\r\n      const url = `${BASE_URL}movie/${movieId}?${meta}&append_to_response=credits,reviews`;\r\n\r\n      const fetchMovie = await fetch(url);\r\n      const r = await fetchMovie.json();\r\n      console.log(r);\r\n      return setDetailsFilm(r);\r\n    };\r\n    fetchDetailsMovie();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <img src={imgBaseUrl + detailsFilm.poster_path} alt=\"\" />\r\n      <h1>{detailsFilm.title || detailsFilm.name}</h1>\r\n      {detailsFilm.genres && (\r\n        <p>Жанры: {detailsFilm.genres.map(genre => genre.name + ', ')} </p>\r\n      )}\r\n\r\n      <p>{detailsFilm.overview}</p>\r\n      <p>Дата выхода: {detailsFilm.release_date}</p>\r\n      <br />\r\n      <NavLink to=\"cast\">Cast </NavLink>\r\n      <NavLink to=\"reviews\">Reviews</NavLink>\r\n      <br />\r\n\r\n      <Suspense fallback={<h1>LOADING...</h1>}>\r\n        <Routes>\r\n          <Route path=\"cast\" element={<Cast credits={detailsFilm.credits} />} />\r\n          <Route\r\n            path=\"reviews\"\r\n            element={<Reviews reviews={detailsFilm.reviews} />}\r\n          />\r\n        </Routes>\r\n      </Suspense>\r\n      <p>...</p>\r\n    </div>\r\n  );\r\n}\r\n","// import { useParams } from 'react-router-dom';\r\n// import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\r\n\r\nexport default function Reviews({ reviews }) {\r\n  //   const { movieId } = useParams();\r\n  // const actorPhoto = 'https://image.tmdb.org/t/p/w200';\r\n\r\n  return (\r\n    <>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          width: '1200px',\r\n          gap: '25px',\r\n        }}\r\n      >\r\n        {reviews.results.length > 0 ? (\r\n          reviews.results.map(review => {\r\n            return (\r\n              <li key={review.id}>\r\n                <p>{review.author}</p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>There is not reviews</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Cast","credits","style","display","flexWrap","width","gap","cast","map","actor","profile_path","src","alt","DefaultPhoto","height","name","id","MovieDetailsPage","props","movieId","useParams","useState","detailsFilm","setDetailsFilm","imgBaseUrl","useEffect","fetchDetailsMovie","meta","URLSearchParams","api_key","url","fetch","fetchMovie","json","r","console","log","poster_path","title","genres","genre","overview","release_date","to","Suspense","fallback","path","element","reviews","Reviews","results","length","review","author","content"],"sourceRoot":""}