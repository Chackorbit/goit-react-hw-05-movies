{"version":3,"file":"static/js/466.2f88a98d.chunk.js","mappings":"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","sources":["components/HomePage/HomePage.styled.js","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviePage.module.css?9658","components/MoviesPage/MoviePage.jsx","components/Requests/Requests.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmContainer = styled.div`\n  display: flex;\n  width: 1400px;\n  flex-wrap: wrap;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 40px;\n\n  padding: 40px 0;\n`;\nexport const FilmsItem = styled.li`\n  width: 300px;\n  height: 600px;\n  gap: 20px;\n  overflow: hidden;\n  transition: transform 250ms ease;\n\n  -webkit-box-shadow: -1px 2px 10px 3px rgba(0, 0, 0, 0.84);\n  box-shadow: -1px 2px 10px 3px rgba(0, 0, 0, 0.84);\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviePage_SearchForm__y3Idt\",\"SearchForm_button\":\"MoviePage_SearchForm_button__7MDRG\",\"SearchForm_input\":\"MoviePage_SearchForm_input__1XRSc\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  FilmContainer,\n  FilmsItem,\n  FilmsList,\n  FilmTitle,\n} from '../HomePage/HomePage.styled';\n\nimport s from './MoviePage.module.css';\nimport Poster from 'img/instagram-g6f508c30b_640.png';\nimport { FcSearch } from 'react-icons/fc';\nimport { searchQueryMovie } from '../Requests/Requests';\n\nexport default function MoviePage() {\n  // eslint-disable-next-line no-unused-vars\n  const [query, setQuery] = useState('');\n  const [foundMovie, setFoundMovie] = useState([]);\n  let [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n  // useEffect(() => {\n  //   const searchQuery = searchParams.get('query');\n  //   if (!searchQuery || searchQuery === '') return;\n\n  //   const searchQueryMovie = async () => {\n  //     const BASE_URL = 'https://api.themoviedb.org/3/';\n  //     const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n  //     const query = new URLSearchParams(location.search).get('query') ?? '';\n\n  //     const meta = new URLSearchParams({\n  //       api_key: key,\n  //       query,\n  //       page: 1,\n  //       include_adult: false,\n  //     });\n\n  //     const url = `${BASE_URL}search/movie?${meta}`;\n\n  //     const fetchQueryMovie = await fetch(url);\n  //     const r = await fetchQueryMovie.json();\n\n  //     return setFoundMovie(r);\n  //   };\n\n  //   searchQueryMovie();\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [query, searchParams, setSearchParams]);\n\n  const saveQuery = e => {\n    setQuery(e.target.value);\n    if (e.target.value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const search = location.search;\n\n    searchQueryMovie(searchParams, search).then(r => setFoundMovie(r));\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') != null) {\n      const searchQuery = searchParams.get('query');\n      const search = location.search;\n\n      searchQueryMovie(searchQuery, search).then(r => setFoundMovie(r));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <form className={s.SearchForm} onSubmit={onSubmit}>\n        <button type=\"submit\" className={s.SearchForm_button}>\n          <span className={s.button_label}></span>\n          <FcSearch />\n        </button>\n\n        <input\n          value={\n            searchParams.get('query') === null ? '' : searchParams.get('query')\n          }\n          onChange={saveQuery}\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Film\"\n        />\n      </form>\n\n      <FilmContainer>\n        <FilmsList>\n          {foundMovie.results &&\n            foundMovie.results.map(movie => {\n              return (\n                <Link\n                  to={`${movie.id}`}\n                  state={{ from: location }}\n                  key={movie.id}\n                >\n                  <FilmsItem id={movie.id}>\n                    {movie.poster_path ? (\n                      <img src={imgBaseUrl + movie.poster_path} alt=\"\"></img>\n                    ) : (\n                      <img src={Poster} alt=\"\" width={320} height={450}></img>\n                    )}\n                    <FilmTitle>{movie.name ?? movie.title} </FilmTitle>\n                    <p>{movie.overview}</p>\n                  </FilmsItem>\n                </Link>\n              );\n            })}\n        </FilmsList>\n      </FilmContainer>\n    </div>\n  );\n}\n","export async function fetchDetailsMovie(movieId) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n  });\n\n  const url = `${BASE_URL}movie/${movieId}?${meta}&append_to_response=credits,reviews`;\n\n  const fetchMovie = await fetch(url);\n  const r = await fetchMovie.json();\n\n  return r;\n}\n\nexport async function searchQueryMovie(searchQuery, search) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n  //   console.log(searchQuery);\n  //   console.log(search);\n\n  //   const searchQuery = searchParams.get('query');\n  if (!searchQuery) return;\n\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n    query,\n    page: 1,\n    include_adult: false,\n  });\n\n  const url = `${BASE_URL}search/movie?${meta}`;\n\n  const fetchQueryMovie = await fetch(url);\n  const r = await fetchQueryMovie.json();\n\n  return r;\n}\n\nexport const getMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n    page: 1,\n  });\n  const url = `${BASE_URL}trending/all/day?${meta}`;\n\n  const fetchPopularMovie = await fetch(url);\n  const r = await fetchPopularMovie.json();\n  // console.log(r.results);\n\n  return r.results;\n};\n\n// export default (fetchDetailsMovie, searchQueryMovie);\n"],"names":["FilmContainer","styled","FilmsList","FilmsItem","FilmTitle","MoviePage","useState","setQuery","foundMovie","setFoundMovie","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","searchQuery","search","searchQueryMovie","then","r","className","s","onSubmit","e","preventDefault","type","value","onChange","target","query","autoComplete","autoFocus","placeholder","results","map","movie","to","id","state","from","poster_path","src","alt","Poster","width","height","name","title","overview","fetchDetailsMovie","movieId","meta","URLSearchParams","api_key","url","fetch","fetchMovie","json","BASE_URL","key","page","include_adult","fetchQueryMovie","getMovies","fetchPopularMovie"],"sourceRoot":""}