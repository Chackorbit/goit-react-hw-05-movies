{"version":3,"file":"static/js/450.cf7de2e7.chunk.js","mappings":"iNAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAG7B,OACE,+BACE,eACEC,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,MAAO,SACPC,IAAK,QALT,SAQGL,GACCA,EAAQM,KAAKC,KAAI,SAAAC,GACf,OACE,0BACGA,EAAMC,cACL,gBAAKC,IAjBF,kCAiBoBF,EAAMC,aAAcE,IAAI,MAE/C,gBAAKD,IAAKE,EAAcD,IAAI,GAAGP,MAAO,IAAKS,OAAQ,OAErD,uBAAIL,EAAMM,SANHN,EAAMO,a,+JCbd,SAASC,EAAiBC,GACvC,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAoCF,EAAAA,EAAAA,UAClC,mCADF,eAAOG,EAAP,UA6BA,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gGACP,gCACL,mCAENC,EAAO,IAAIC,gBAAgB,CAC/BC,QAHU,qCAONC,EATkB,UACP,gCADO,iBASQX,EATR,YASmBQ,EATnB,gDAWCI,MAAMD,GAXP,cAWlBE,EAXkB,gBAYRA,EAAWC,OAZH,cAYlBC,EAZkB,yBAmBjBX,EAAeW,IAnBE,4CAAH,qDAqBvBR,MACC,CAACP,KAGF,4BACE,gBAAKR,IAAKa,EAAaF,EAAYa,YAAavB,IAAI,MACpD,wBAAKU,EAAYc,OAASd,EAAYP,OACrCO,EAAYe,SACX,4DAAWf,EAAYe,OAAO7B,KAAI,SAAA8B,GAAK,OAAIA,EAAMvB,KAAO,QAAxD,QAGF,uBAAIO,EAAYiB,YAChB,2FAAiBjB,EAAYkB,iBAC7B,mBACA,SAAC,KAAD,CAASC,GAAG,OAAZ,oBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,sBACA,mBAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC,UAAD,CAAM5C,QAASqB,EAAYrB,aACvD,SAAC,KAAD,CACE2C,KAAK,UACLC,SAAS,SAAC,UAAD,CAASC,QAASxB,EAAYwB,kBAI7C,oC,8EC3DS,SAASC,EAAT,GAA+B,IAAZD,EAAW,EAAXA,QAIhC,OACE,+BACE,eACE5C,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,MAAO,SACPC,IAAK,QALT,SAQGwC,EAAQE,QAAQC,OAAS,EACxBH,EAAQE,QAAQxC,KAAI,SAAA0C,GAClB,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOlC,QAOpB,sD","sources":["components/Cast/Cast.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\n\nexport default function Cast({ credits }) {\n  const actorPhoto = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          width: '1200px',\n          gap: '25px',\n        }}\n      >\n        {credits &&\n          credits.cast.map(actor => {\n            return (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <img src={actorPhoto + actor.profile_path} alt=\"\" />\n                ) : (\n                  <img src={DefaultPhoto} alt=\"\" width={200} height={300} />\n                )}\n                <p>{actor.name}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n","import { useParams, NavLink, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nexport default function MovieDetailsPage(props) {\n  const { movieId } = useParams();\n  const [detailsFilm, setDetailsFilm] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [imgBaseUrl, setImgBaseUrl] = useState(\n    'https://image.tmdb.org/t/p/w500'\n  );\n\n  useEffect(() => {\n    const fetchDetailsMovie = async () => {\n      const BASE_URL = 'https://api.themoviedb.org/3/';\n      const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n      const meta = new URLSearchParams({\n        api_key: key,\n      });\n      // console.log(movieId);\n\n      const url = `${BASE_URL}movie/${movieId}?${meta}&append_to_response=credits,reviews`;\n\n      const fetchMovie = await fetch(url);\n      const r = await fetchMovie.json();\n      // console.log(r);\n      // console.log(fetchMovie);\n      // if (fetchMovie.status === 404) {\n      //   console.log('Film not found');\n      // }\n\n      return setDetailsFilm(r);\n    };\n    fetchDetailsMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <img src={imgBaseUrl + detailsFilm.poster_path} alt=\"\" />\n      <h1>{detailsFilm.title || detailsFilm.name}</h1>\n      {detailsFilm.genres && (\n        <p>Жанры: {detailsFilm.genres.map(genre => genre.name + ', ')} </p>\n      )}\n\n      <p>{detailsFilm.overview}</p>\n      <p>Дата выхода: {detailsFilm.release_date}</p>\n      <br />\n      <NavLink to=\"cast\">Cast </NavLink>\n      <NavLink to=\"reviews\">Reviews</NavLink>\n      <br />\n\n      <Suspense fallback={<h1>LOADING...</h1>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast credits={detailsFilm.credits} />} />\n          <Route\n            path=\"reviews\"\n            element={<Reviews reviews={detailsFilm.reviews} />}\n          />\n        </Routes>\n      </Suspense>\n      <p>...</p>\n    </div>\n  );\n}\n","// import { useParams } from 'react-router-dom';\n// import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\n\nexport default function Reviews({ reviews }) {\n  //   const { movieId } = useParams();\n  // const actorPhoto = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          width: '1200px',\n          gap: '25px',\n        }}\n      >\n        {reviews.results.length > 0 ? (\n          reviews.results.map(review => {\n            return (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>There is not reviews</p>\n        )}\n      </ul>\n    </>\n  );\n}\n"],"names":["Cast","credits","style","display","flexWrap","width","gap","cast","map","actor","profile_path","src","alt","DefaultPhoto","height","name","id","MovieDetailsPage","props","movieId","useParams","useState","detailsFilm","setDetailsFilm","imgBaseUrl","useEffect","fetchDetailsMovie","meta","URLSearchParams","api_key","url","fetch","fetchMovie","json","r","poster_path","title","genres","genre","overview","release_date","to","Suspense","fallback","path","element","reviews","Reviews","results","length","review","author","content"],"sourceRoot":""}