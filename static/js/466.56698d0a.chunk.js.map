{"version":3,"file":"static/js/466.56698d0a.chunk.js","mappings":"4QAEaA,EAAgBC,EAAAA,GAAAA,IAAH,6HAQbC,EAAYD,EAAAA,GAAAA,GAAH,0JASTE,EAAYF,EAAAA,GAAAA,GAAH,wSAeTG,EAAYH,EAAAA,GAAAA,EAAH,kE,oICjCtB,GAAgB,WAAa,8BAA8B,kBAAoB,qCAAqC,iBAAmB,qC,yBCYxH,SAASI,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAaMC,EAAgB,mCAAG,gGACN,gCACL,mCAENC,EAAO,IAAIC,gBAAgB,CAC/BC,QAHU,mCAIVP,MAAOA,EACPQ,KAAM,EACNC,eAAe,IAGXC,EAXiB,UACN,gCADM,wBAWgBL,GAXhB,SAaOM,MAAMD,GAbb,cAajBE,EAbiB,gBAcPA,EAAgBC,OAdT,cAcjBC,EAdiB,OAevBC,QAAQC,IAAIF,GAfW,kBAgBhBX,EAAcW,IAhBE,4CAAH,qDAmBtB,OACE,4BACE,kBAAMG,UAAWC,EAAAA,WAAcC,SA/Bf,SAAAC,GAClBA,EAAEC,iBAEFjB,KA4BE,WACE,oBAAQkB,KAAK,SAASL,UAAWC,EAAAA,kBAAjC,WACE,iBAAMD,UAAWC,EAAAA,gBACjB,SAAC,MAAD,QAGF,kBACEK,QAhCU,SAAAH,GAChBnB,EAASmB,EAAEI,OAAOC,QAgCZR,UAAWC,EAAAA,iBACXI,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,oBAIhB,SAAC,KAAD,WACE,SAAC,KAAD,UACG1B,EAAW2B,SACV3B,EAAW2B,QAAQC,KAAI,SAAAC,GAAU,IAAD,EAE9B,OADAhB,QAAQC,IAAIe,IAEV,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,UACE,UAAC,KAAD,CAAWA,GAAIF,EAAME,GAArB,UACGF,EAAMG,aACL,gBAAKC,IA1DN,kCA0DwBJ,EAAMG,YAAaE,IAAI,MAE9C,gBAAKD,IAAKE,EAAQD,IAAI,GAAGE,MAAO,IAAKC,OAAQ,OAE/C,UAAC,KAAD,qBAAYR,EAAMS,YAAlB,QAA0BT,EAAMU,MAAhC,QACA,uBAAIV,EAAMW,eARgBX,EAAME,gB","sources":["components/HomePage/HomePage.styled.js","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviePage.module.css?9658","components/MoviesPage/MoviePage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FilmContainer = styled.div`\r\n  display: flex;\r\n  width: 1400px;\r\n  flex-wrap: wrap;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const FilmsList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 40px;\r\n\r\n  padding: 40px 0;\r\n`;\r\nexport const FilmsItem = styled.li`\r\n  width: 300px;\r\n  height: 600px;\r\n  gap: 20px;\r\n  overflow: hidden;\r\n  transition: transform 250ms ease;\r\n\r\n  -webkit-box-shadow: -1px 2px 10px 3px rgba(0, 0, 0, 0.84);\r\n  box-shadow: -1px 2px 10px 3px rgba(0, 0, 0, 0.84);\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const FilmTitle = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviePage_SearchForm__EDPU9\",\"SearchForm_button\":\"MoviePage_SearchForm_button__wknNv\",\"SearchForm_input\":\"MoviePage_SearchForm_input__13ruD\"};","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  FilmContainer,\r\n  FilmsItem,\r\n  FilmsList,\r\n  FilmTitle,\r\n} from '../HomePage/HomePage.styled';\r\n\r\nimport s from './MoviePage.module.css';\r\nimport Poster from 'img/instagram-g6f508c30b_640.png';\r\nimport { FcSearch } from 'react-icons/fc';\r\n\r\nexport default function MoviePage() {\r\n  const [query, setQuery] = useState('');\r\n  const [foundMovie, setFoundMovie] = useState({});\r\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\r\n\r\n  const searchMovie = e => {\r\n    e.preventDefault();\r\n\r\n    searchQueryMovie();\r\n  };\r\n\r\n  const saveQuery = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const searchQueryMovie = async () => {\r\n    const BASE_URL = 'https://api.themoviedb.org/3/';\r\n    const key = '39268a7cf0f5a62bddedb30e59a8c087';\r\n\r\n    const meta = new URLSearchParams({\r\n      api_key: key,\r\n      query: query,\r\n      page: 1,\r\n      include_adult: false,\r\n    });\r\n\r\n    const url = `${BASE_URL}search/movie?${meta}`;\r\n\r\n    const fetchQueryMovie = await fetch(url);\r\n    const r = await fetchQueryMovie.json();\r\n    console.log(r);\r\n    return setFoundMovie(r);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.SearchForm} onSubmit={searchMovie}>\r\n        <button type=\"submit\" className={s.SearchForm_button}>\r\n          <span className={s.button_label}></span>\r\n          <FcSearch />\r\n        </button>\r\n\r\n        <input\r\n          onInput={saveQuery}\r\n          className={s.SearchForm_input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search Film\"\r\n        />\r\n      </form>\r\n\r\n      <FilmContainer>\r\n        <FilmsList>\r\n          {foundMovie.results &&\r\n            foundMovie.results.map(movie => {\r\n              console.log(movie);\r\n              return (\r\n                <Link to={`${movie.id}`} key={movie.id}>\r\n                  <FilmsItem id={movie.id}>\r\n                    {movie.poster_path ? (\r\n                      <img src={imgBaseUrl + movie.poster_path} alt=\"\"></img>\r\n                    ) : (\r\n                      <img src={Poster} alt=\"\" width={320} height={450}></img>\r\n                    )}\r\n                    <FilmTitle>{movie.name ?? movie.title} </FilmTitle>\r\n                    <p>{movie.overview}</p>\r\n                  </FilmsItem>\r\n                </Link>\r\n              );\r\n            })}\r\n        </FilmsList>\r\n      </FilmContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["FilmContainer","styled","FilmsList","FilmsItem","FilmTitle","MoviePage","useState","query","setQuery","foundMovie","setFoundMovie","searchQueryMovie","meta","URLSearchParams","api_key","page","include_adult","url","fetch","fetchQueryMovie","json","r","console","log","className","s","onSubmit","e","preventDefault","type","onInput","target","value","autoComplete","autoFocus","placeholder","results","map","movie","to","id","poster_path","src","alt","Poster","width","height","name","title","overview"],"sourceRoot":""}