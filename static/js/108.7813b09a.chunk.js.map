{"version":3,"file":"static/js/108.7813b09a.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/GoBackBtn/GoBackBtn.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Requests/Requests.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\n\nexport default function Cast({ credits }) {\n  const actorPhoto = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          width: '1200px',\n          gap: '25px',\n        }}\n      >\n        {credits &&\n          credits.cast.map(actor => {\n            return (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <img src={actorPhoto + actor.profile_path} alt=\"\" />\n                ) : (\n                  <img src={DefaultPhoto} alt=\"\" width={200} height={300} />\n                )}\n                <p>{actor.name}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n\nconst GoBackBtn = ({ location }) => {\n  let navigate = useNavigate();\n\n  // console.log(location);\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          navigate(location?.state?.from ?? '/');\n        }}\n      >\n        Go back\n      </button>\n    </>\n  );\n};\nexport default GoBackBtn;\n","import {\n  useParams,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport GoBackBtn from '../GoBackBtn/GoBackBtn';\nimport { fetchDetailsMovie } from '../Requests/Requests';\nexport default function MovieDetailsPage(props) {\n  const { movieId } = useParams();\n  const [detailsFilm, setDetailsFilm] = useState([]);\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchDetailsMovie(movieId).then(r => setDetailsFilm(r));\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackBtn location={location}></GoBackBtn>\n      <div>\n        <img src={imgBaseUrl + detailsFilm.poster_path} alt=\"\" />\n        <h1>{detailsFilm.title || detailsFilm.name}</h1>\n        {detailsFilm.genres && (\n          <p>Жанры: {detailsFilm.genres.map(genre => genre.name + ', ')} </p>\n        )}\n\n        <p>{detailsFilm.overview}</p>\n        <p>Дата выхода: {detailsFilm.release_date}</p>\n        <br />\n        <NavLink to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n          Cast{' '}\n        </NavLink>\n        <NavLink to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>\n          Reviews\n        </NavLink>\n        <br />\n\n        <Suspense fallback={<h1>LOADING...</h1>}>\n          <Routes>\n            <Route\n              path=\"cast\"\n              element={<Cast credits={detailsFilm.credits} />}\n            />\n            <Route\n              path=\"reviews\"\n              element={<Reviews reviews={detailsFilm.reviews} />}\n            />\n          </Routes>\n        </Suspense>\n        <p>...</p>\n      </div>\n    </>\n  );\n}\n","export async function fetchDetailsMovie(movieId) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n  });\n\n  const url = `${BASE_URL}movie/${movieId}?${meta}&append_to_response=credits,reviews`;\n\n  const fetchMovie = await fetch(url);\n  const r = await fetchMovie.json();\n\n  return r;\n}\n\nexport async function searchQueryMovie(searchQuery, search) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n  //   console.log(searchQuery);\n  //   console.log(search);\n\n  //   const searchQuery = searchParams.get('query');\n  if (!searchQuery) return;\n\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n    query,\n    page: 1,\n    include_adult: false,\n  });\n\n  const url = `${BASE_URL}search/movie?${meta}`;\n\n  const fetchQueryMovie = await fetch(url);\n  const r = await fetchQueryMovie.json();\n\n  return r;\n}\n\nexport const getMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const key = '39268a7cf0f5a62bddedb30e59a8c087';\n\n  const meta = new URLSearchParams({\n    api_key: key,\n    page: 1,\n  });\n  const url = `${BASE_URL}trending/all/day?${meta}`;\n\n  const fetchPopularMovie = await fetch(url);\n  const r = await fetchPopularMovie.json();\n  // console.log(r.results);\n\n  return r.results;\n};\n\n// export default (fetchDetailsMovie, searchQueryMovie);\n","// import { useParams } from 'react-router-dom';\n// import DefaultPhoto from 'img/instagram-g6f508c30b_640.png';\n\nexport default function Reviews({ reviews }) {\n  //   const { movieId } = useParams();\n  // const actorPhoto = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          width: '1200px',\n          gap: '25px',\n        }}\n      >\n        {reviews.results.length > 0 ? (\n          reviews.results.map(review => {\n            return (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>There is not reviews</p>\n        )}\n      </ul>\n    </>\n  );\n}\n"],"names":["Cast","credits","style","display","flexWrap","width","gap","cast","map","actor","profile_path","src","alt","DefaultPhoto","height","name","id","location","navigate","useNavigate","type","onClick","state","from","MovieDetailsPage","props","movieId","useParams","useState","detailsFilm","setDetailsFilm","useLocation","useEffect","fetchDetailsMovie","then","r","poster_path","title","genres","genre","overview","release_date","to","Suspense","fallback","path","element","Reviews","reviews","meta","URLSearchParams","api_key","url","fetch","fetchMovie","json","searchQueryMovie","searchQuery","search","BASE_URL","key","query","get","page","include_adult","fetchQueryMovie","getMovies","fetchPopularMovie","results","length","review","author","content"],"sourceRoot":""}